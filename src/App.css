.App {
  text-align: center;
  width: 100%;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 80px;
}

/********************* Header Styles *********************/
.App-header {
  width: 100%;
  position: relative;
  z-index: -1;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center; 
  background-color: #222;
  height: 150px;
  padding: 20px;
  color: white;
}

.App-title {
  margin: 0px;
  font-size: 1.5em;
}

.topHalf {
  padding-right: 100px;
  padding-bottom: 10px;
}

.carsContainer {
  position: absolute;
  top: 5px;
  width: 100%;
  display:flex;
  flex-direction: row;
}

.vehicle {
  visibility: hidden;
  position: absolute;
  top: 5px;
  left: 100%;
  font-size: xx-large;
  animation: driveLeft;
  animation-duration: 10s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}
/* these animation delays could be assigned more effeciently using javascript to iterate through an array of the elements. Since this was a last minute addition just to prove the concept was doable, I am going to leave it for now. */
.vehicle:nth-of-type(2) {
  animation-delay: 2s;
}

.vehicle:nth-of-type(3) {
  animation-delay: 4s;
}

.vehicle:nth-of-type(4){
  animation-delay: 6s;
}

.vehicle:nth-of-type(5){
  animation-delay: 8s;
}

.vehicle:nth-of-type(6){
  animation-delay: 10s;
}

.bottomCars {
  width: 100%;
  top: 130px;
}

.bottomVehic {
  visibility: hidden;
  left: 0%;
  transform: scaleX(-1); 
  animation: driveRight;
  animation-duration: 10s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.bottomVehic:nth-of-type(2) {
  animation-delay: 2s;
}

.bottomVehic:nth-of-type(3) {
  animation-delay: 4s;
}

.bottomVehic:nth-of-type(4){
  animation-delay: 6s;
}

.bottomVehic:nth-of-type(5){
  animation-delay: 8s;
}

.bottomVehic:nth-of-type(6){
  animation-delay: 10s;
}

@keyframes driveLeft {
  from {
    visibility: hidden;
    left: 100%;
  }
  to {
    visibility: visible;
    left: 0%;
  }
}

@keyframes driveRight{
  from {
    visibility: hidden;
    left: 0%;
  }
  to {
    visibility: visible;
    left: 100%;
  }
}


.bottomHalf {
  padding-left: 100px;
  padding-top: 10px;
}

#dashes {
  width: 100%;
  margin: 0px;
  border-bottom: 5px dashed yellow;
  border-top: none;
}

.App-intro {
  font-size: large;
}
/********************* Root Styles *********************/

#rootLabel {
  text-align: left;
  margin: 10px 5px 10px 5px;
  padding: 5px;
}

#reqsButton {
  border: 1px solid grey;
  margin-right: 2px;
  z-index: 1;
}

#reqsModal {
  position: absolute;
  bottom: 25px;
  left: 35px;
}

.reqsContainer {
  position: relative;
  z-index: 1;
  background: white;
  border: 1px solid grey;
  border-bottom: 1px solid white;
  border-radius: 5px;
  font-size: smaller;
  text-align: left;
}

.requirements {
  /* padding-left: 0px; */
}

#reqsTriangle {
  background: white;
  position: relative;
  bottom: 30px;
  left: 30px;
  border: 1px solid grey;
  width: 50px;
  height: 50px;
  background: white;
  transform: rotate(45deg);
}

.rootContainer{
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  border-bottom: 3px solid rgb(102, 186, 222);
}

.rootContainer button {
  height: 20px;
}

/********************* Add form styles *********************/
.addFormContainer {
  width: 100%;
  display: inline-flex;
  flex-wrap: wrap;
  justify-content: space-between;
  border: 1px solid grey;
  border-radius: 5px;
  padding: 5px;
}

.addFormContainer .inputContainer {
  width: auto;
}

.addFormContainer .cancel {
  margin-left: 2px;
}

/********************* Branch Styles *********************/
.branchContainer {
 padding-top: 25px;
 margin-left: 25px;
 border-left: 2px solid black;
}

.branchTitleContainer {
  margin-bottom: 0px;
  width: 100%;
  display:inline-flex;
  align-items:center;
  justify-content: flex-start;
  height: 20px;
  padding-top: 30px;
}

.twig {
  border: 1px solid black;
  margin: 0px;
  width: 100px;
}

.branchTitle {
  margin-left: 5px;
}

.branchRange {
  font-size: x-small;
  background:  rgb(238,99,93);
  color: white;
  margin-left: 15px;
  padding: 3px;
  border-radius: 5px;
}

/********************* EditForm Styles *********************/
.editForm {
  background: white;
  display: flex;
  align-items: flex-end;
  flex-direction: column;
  position: absolute;
  z-index: 3;
  border: 1px solid grey;
  padding: 5px;
  margin-left: 250px;
  border-radius: 5px;
}

.inputContainer {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.nameInput {
  width: 55px;
}

.numberInput {
  width: 55px;
}

button {
  border-radius: 5px;
  border: none;
}

button:hover {
  opacity: 0.8;
}

button:focus {
  outline: none;
}
.editButton {
  margin-left: 10px;
}
.update {
  background: rgb(63, 220, 116);
}

.delete {
  background: rgb(255, 73, 73);
  margin-left: 2px;
  margin-right: 2px;
}
.cancel {
  background: rgb(255, 228, 73);
}

/********************* Leaf Styles *********************/
.leafContainer {
  padding-top: 20px;
  padding-bottom: 0px;
  width: 100px;
  text-align: left;
  margin-left: 120px;
  margin-top: 0px;
  border-left: 2px solid black;
}

.leafTitleContainer {
  margin-right:100%;
  margin-bottom: 0px;
  width: 100%;
  display:flex;
  align-items:flex-end;
  /* justify-content: flex-start; */

}

.leafNum {
  margin-top: 0px;
  margin-bottom: 0px;
  padding-left: 15px;
}